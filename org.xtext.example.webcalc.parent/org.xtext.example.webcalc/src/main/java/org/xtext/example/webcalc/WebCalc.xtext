/**
 * Copyright (c) 2016 TypeFox GmbH (http://typefox.io)
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
grammar org.xtext.example.webcalc.WebCalc with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate webCalc "http://www.xtext.org/example/webcalc/WebCalc"

Calculation:
	equations+=Equation*;
	
Equation:
	Variable | Result;

Result:
	'result' '=' expression=Expression;

Variable:
	'let' name=ID '=' expression=Expression;

Expression:
	MultiplyExpression ({BinaryExpression.left=current} operator=('+'|'-') right=MultiplyExpression)*;

MultiplyExpression returns Expression:
	UnaryExpression ({BinaryExpression.left=current} operator=('*'|'/') right=UnaryExpression)*;

UnaryExpression returns Expression:
	PrimaryExpression | ({UnaryExpression} operator='-' expression=PrimaryExpression);

PrimaryExpression returns Expression:
	'(' Expression ')'
	| VariableReference
	| InputReference
	| FunctionCall
	| NumberLiteral;

VariableReference:
	variable=[Variable];

InputReference:
	input=Input;

FunctionCall:
	Function1Call | Function2Call;

Function1Call:
	function=('abs'|'acos'|'asin'|'atan'|'ceil'|'cos'|'cosh'|'exp'|'floor'|'log'|'log10'|'sin'|'sinh'|'sqrt'|'tan'|'tanh')
	'(' argument=Expression ')';

Function2Call:
	function=('atan2'|'hypot'|'max'|'min'|'pow')
	'(' argument1=Expression ',' argument2=Expression ')';

NumberLiteral:
	value=Number;

Number returns ecore::EDouble:
	INT ('.' INT)?;

enum Input:
	random | A | B | C;
